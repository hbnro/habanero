/**
 * Basic mixins
 */

@mixin clearfix {
  zoom: 1;
  &:after {
    display: block;
    visibility: hidden;
    height: 0;
    clear: both;
    content: ".";
  }
}

@mixin center_block {
  display: block;
  margin: 0 auto;
}

@mixin size($height: 5px, $width: 5px) {
	height: %('%dpx', $height);
	width: %('%dpx', $width);
	overflow: hidden;
	display: block;
}

@mixin square($size: 5px) {
  @include size($size, $size);
}

@mixin placeholder($color: #graylight) {
  :-moz-placeholder {
    color: $color;
  }
  ::-webkit-input-placeholder {
    color: $color;
  }
}



// Buttons
.button(@color: #f5f5f5, @textColor: #333, @textShadow: 0 1px 1px rgba(255,255,255,.75), @fontSize: 13px, @padding: 9px 15px 10px, @borderRadius: 6px) {
  display: inline-block;
  #gradient > .vertical(@color,darken(saturate(@color,10),10));
  padding: @padding;
  text-shadow: @textShadow;
  color: @textColor;
  font-size: @fontSize;
  line-height: 20px;
  .border-radius(@borderRadius);
  @shadow: inset 0 1px 0 rgba(255,255,255,.2), inset 0 -1px 0 rgba(0,0,0,.2), 0 1px 2px rgba(0,0,0,.25);
  .box-shadow(@shadow);
  &:hover {
    background-position: 0 -15px;
    color: @textColor;
    text-decoration: none;
  }
}

// Add an alphatransparency value to any background or border color (via Elyse Holladay)
#translucent {
  .background(@color: @white, @alpha: 1) {
    background-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
	}
	.border(@color: @white, @alpha: 1) {
		border-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
		background-clip: padding-box;
	}
}


@mixin opacity($num: 1) {
	filter: %("alpha(opacity=%d)", [$num * 100]);
	-khtml-opacity: $num;
	-moz-opacity: $num;
	opacity: $num;
}
